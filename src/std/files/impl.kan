import "path";

type PathMethods enum {
    LastSeparatorPtr,
    IsAbs,
    IsRoot,
    Canonicalize,
    GetCwd,
    SystemSeparator
}

delegate def CharReturn(): i8;
delegate def StringReturn(p: *path.Path): *i8;
delegate def BoolReturn(p: *path.Path): bool;
delegate def Transformation(p: *path.Path, dest: *path.Buf): path.Error;
delegate def BufConstructor(): path.Buf;

let impl_functions: [6]*void = undefined;

def system_separator(): i8 {
    return (impl_functions[PathMethods.SystemSeparator as i32] as CharReturn)();
}

def last_separator_ptr(p: *path.Path): *i8 {
    return (impl_functions[PathMethods.LastSeparatorPtr as i32] as StringReturn)(p);
}

def is_abs(p: *path.Path): bool {
    return (impl_functions[PathMethods.IsAbs as i32] as BoolReturn)(p);
}

def is_root(p: *path.Path): bool {
    return (impl_functions[PathMethods.IsRoot as i32] as BoolReturn)(p);
}

def canonicalize(p: *path.Path, dest: *path.Buf): path.Error {
    return (impl_functions[PathMethods.Canonicalize as i32] as Transformation)(p, dest);
}

def get_cwd(): path.Buf {
    return (impl_functions[PathMethods.GetCwd as i32] as BufConstructor)();
}
