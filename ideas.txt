- export (like flutter)
- identifiers that start with _ are private
- typeid function. returns string literal?

- type checking (hm)
    - substitution map https://en.wikipedia.org/wiki/Disjoint-set_data_structure
    - no set of unification constraints, but just recursive unify calls
    - see: https://github.com/rust-lang/chalk/blob/6a7bb25402987421d93d02bda3f5d79bf878812c/src/solve/infer/unify.rs (unify_ty_ty)
    - see: https://www.cl.cam.ac.uk/teaching/1415/L28/type-inference.pdf

- type checking (bi)
    - this paper:         https://www.cl.cam.ac.uk/~nk480/bidir.pdf
    - is explained here:  https://arxiv.org/pdf/1908.05839.pdf
    - any, anyInt etc. are implemented using inheritance rules
    - checking actually makes the types stricter (looser types might be rejected)
